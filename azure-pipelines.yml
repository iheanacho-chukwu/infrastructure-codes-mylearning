name: Infrastructure-Deployment-$(Build.SourceBranchName)-$(Date:yyyyMMdd)

variables:
  TFSTATE_SA: iacbootslab
  TFSTATE_CONTAINER: tfstate-demo
  TFSTATE_KEY: terraform.tfstate
  TFSTATE_RG: demo
  SVC_CONNECTION: atiku-srvconnection

trigger:
- terraform-cicd

pool: workload-selfhosted-agentpool

stages: 
- stage: Terraform_build
  jobs:
  - job: Build
    steps:

    - task: TerraformInstaller@0
      displayName: 'package requirements'
      inputs:
        terraformVersion: 'latest'

    - task: TerraformCLI@0
      displayName: 'Initialization'
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)/dev'
        commandOptions: '-upgrade'
        backendType: 'azurerm'
        backendServiceArm: '$(SVC_CONNECTION)'
        backendAzureRmSubscriptionId: '$(ARM_SUBCRIPTION_ID)'
        backendAzureRmResourceGroupName: '$(TFSTATE_RG)'
        backendAzureRmStorageAccountName: '$(TFSTATE_SA)'
        backendAzureRmContainerName: '$(TFSTATE_CONTAINER)'
        backendAzureRmKey: '$(TFSTATE_KEY)'
        allowTelemetryCollection: true

    - task: TerraformCLI@0
      displayName: 'Exective Plan'
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/dev'
        environmentServiceName: $(SVC_CONNECTION)
        providerAzureRmSubscriptionId: $(ARM_SUBCRIPTION_ID)
        allowTelemetryCollection: true
        commandOptions: -lock=false -input=false

- stage: Run_Terraform_Apply
  #condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  environment: infra_env
  dependsOn: Terraform_build
  jobs:
    - job: Deploy_Infrastructure
      steps:

      - task: TerraformInstaller@0
        displayName: 'package requirements'
        inputs:
          terraformVersion: 'latest'

      - task: TerraformCLI@0
        displayName: 'Initialization'
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/dev'
          commandOptions: '-upgrade'
          backendType: 'azurerm'
          backendServiceArm: '$(SVC_CONNECTION)'
          backendAzureRmSubscriptionId: '$(ARM_SUBCRIPTION_ID)'
          backendAzureRmResourceGroupName: '$(TFSTATE_RG)'
          backendAzureRmStorageAccountName: '$(TFSTATE_SA)'
          backendAzureRmContainerName: '$(TFSTATE_CONTAINER)'
          backendAzureRmKey: '$(TFSTATE_KEY)'
          allowTelemetryCollection: true

      - task: TerraformCLI@0
        displayName: 'Exective Plan'
        inputs:
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/dev'
          environmentServiceName: $(SVC_CONNECTION)
          providerAzureRmSubscriptionId: $(ARM_SUBCRIPTION_ID)
          allowTelemetryCollection: true
          commandOptions: -lock=false -input=false

      - task: TerraformCLI@0
        displayName: Deploy
        inputs:
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/dev'
          environmentServiceName: $(SVC_CONNECTION)
          providerAzureRmSubscriptionId: $(ARM_SUBCRIPTION_ID)
          commandOptions: '-input=false'
          allowTelemetryCollection: false